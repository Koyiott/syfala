#!/usr/bin/tclsh

set HEADER_FILE    [lindex $argv 0]
set CODEC_NAME    [string range [lindex [split $HEADER_FILE "/"] end] 0 end-5]

set GENERATED_FILE "./$CODEC_NAME\Reg.c"

if {$HEADER_FILE == ""} {
	puts "\[ERROR\] Please put the header file as argument (see README.md)"
	exit 1
}

set SRC_FILE [open "$HEADER_FILE" r]
set DST_FILE [open "$GENERATED_FILE" w]

set systemTime [clock seconds]



puts $DST_FILE "\
/****************************************************************************** \n\
 * @file $GENERATED_FILE \n\
 * Autogenerated with sigmaS_to_syfala_generator.tcl. \n\
 * Registers configuration for $CODEC_NAME.  \n\
 * Based on X_IC_1_REG.h file, generated with Sigma Studio \n\
 * This file doesn't need to be regenerated each time. Only the header file configures the registers.\n\
 * \n\
 * @authors M.POPOFF \n\
 * \n\
 * @date [clock format $systemTime -format %D] [clock format $systemTime -format %H:%M:%S] \n\
 * \n\
 *****************************************************************************/ \n\
  \n\n\n\
#include <syfala/arm/iic_config.h> \n\
#include <syfala/arm/$CODEC_NAME\Reg.h>\n\
#include <syfala/arm/utils.h>\n\
\n\
\n\
XStatus $CODEC_NAME\SetConfig()\n\
{\n\
\	int Status; \n"

while {[gets $SRC_FILE line] >= 0} {
		if {[string match "*_BYTE*" [string trim $line]]} {
			set RW_value [lindex $line end] 		;# Only handle writtable register. If RW_value=0, the register is read only.
			set REG_name [string range [lindex [regexp -all -inline {\S+} $line] 1] 0 end-5] 	;#Extract the name of the register
			if {$RW_value != 0 && $REG_name!="REG_CHIP_PWR_IC_1_Sigma"} { ;# The power register for the ADAU1787 is handled in the ADAU1787BootSequence function
				for {set i 0} {$i < $RW_value} {incr i} {
					puts $DST_FILE "\
						\ Status = ADAU17XXRegWrite($REG_name\_ADDR+0x0$i, (($REG_name\_VALUE >> (8*$i)) & 0xFF),&Iic1);\n\
						\ if (Status != XST_SUCCESS) {\n\
						\		if(Status == XST_FAILURE) PRINT_DEBUG(\" >\[$CODEC_NAME\]Error: could not write $REG_name\\r\\n\"); \n\
						\		return Status;\n\
						\	}\n\n"
				}
			}
		}
}
puts $DST_FILE "  return XST_SUCCESS; \n\
}\n //End of file"
puts "Successfuly generated $GENERATED_FILE!"
